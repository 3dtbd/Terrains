00{"MonoBehaviour":{"m_Enabled":true,"m_EditorHideFlags":0,"m_Name":"Boards","m_EditorClassIdentifier":"","_all":[{"_id":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-7d36bd33-d15a-4555-a9a5-a35625c61987","_name":"Board","_groupIds":["8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-f3f993d6-11f0-4e7b-874f-7d8d36847a38","8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-7a052b00-6f1d-4b66-a1ef-8b968d95a46a","8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-92c790a4-d1f8-469d-be50-790be5f0ba9b","8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-9946a938-1332-4ba9-b464-74e9c177bde0","8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-9986b0c5-a3fb-447c-b0ca-bd760fa182f7"],"_scrollPosition":{"x":0.0,"y":0.0},"_treeWindow_SearchShow":true,"treeWindowShowGroupsAnimation":{"m_Target":false,"speed":2.0,"m_Value":0.0},"_treeWindow_ShowGroups":false}]}}
01{"MonoBehaviour":{"m_Enabled":true,"m_EditorHideFlags":0,"m_Name":"Groups","m_EditorClassIdentifier":"","_all":[{"_id":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-f3f993d6-11f0-4e7b-874f-7d8d36847a38","_boardID":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-7d36bd33-d15a-4555-a9a5-a35625c61987","_name":"Wish List","_taskIds":["8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-a93e55b4-c519-4d14-b514-1d868afa059d","8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-a104c5dd-76d5-4f1b-a988-cd5378fa1f1d"],"_scrollPosition":{"x":0.0,"y":0.0},"_treeWindow_SearchShow":true,"TreeWindowShowAnimation":{"m_Target":false,"speed":2.0,"m_Value":0.0},"_treeWindow_ShowTasks":false},{"_id":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-7a052b00-6f1d-4b66-a1ef-8b968d95a46a","_boardID":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-7d36bd33-d15a-4555-a9a5-a35625c61987","_name":"Planned","_taskIds":["8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-968487d0-8ace-44c5-a87f-0edad49b2b48"],"_scrollPosition":{"x":0.0,"y":0.0},"_treeWindow_SearchShow":true,"TreeWindowShowAnimation":{"m_Target":false,"speed":2.0,"m_Value":0.0},"_treeWindow_ShowTasks":false},{"_id":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-92c790a4-d1f8-469d-be50-790be5f0ba9b","_boardID":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-7d36bd33-d15a-4555-a9a5-a35625c61987","_name":"In Progress","_taskIds":[],"_scrollPosition":{"x":0.0,"y":0.0},"_treeWindow_SearchShow":true,"TreeWindowShowAnimation":{"m_Target":false,"speed":2.0,"m_Value":0.0},"_treeWindow_ShowTasks":false},{"_id":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-9946a938-1332-4ba9-b464-74e9c177bde0","_boardID":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-7d36bd33-d15a-4555-a9a5-a35625c61987","_name":"Testing","_taskIds":[],"_scrollPosition":{"x":0.0,"y":0.0},"_treeWindow_SearchShow":true,"TreeWindowShowAnimation":{"m_Target":false,"speed":2.0,"m_Value":0.0},"_treeWindow_ShowTasks":false},{"_id":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-9986b0c5-a3fb-447c-b0ca-bd760fa182f7","_boardID":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-7d36bd33-d15a-4555-a9a5-a35625c61987","_name":"Completed","_taskIds":["8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-839de884-55a9-439c-b5ee-a5c8f1dc8d94","8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-ab075f86-ed4d-4329-849c-373c5843729f","8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-be948df0-04f2-4928-8b2b-86ce91ed9d83"],"_scrollPosition":{"x":0.0,"y":0.0},"_treeWindow_SearchShow":true,"TreeWindowShowAnimation":{"m_Target":false,"speed":2.0,"m_Value":0.0},"_treeWindow_ShowTasks":false}]}}
02{"MonoBehaviour":{"m_Enabled":true,"m_EditorHideFlags":0,"m_Name":"Tasks","m_EditorClassIdentifier":"","_all":[{"_id":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-ab075f86-ed4d-4329-849c-373c5843729f","_parentID":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-9986b0c5-a3fb-447c-b0ca-bd760fa182f7","_lock":false,"_done":false,"_isParentSubtask":false,"_name":"Document the categorization system","_description":"Docs:\n\nModels are categorized by defining a meta data file for each prefab. This meta-data file captures information such as the category (as in building, tree, flower etc.) and the time period (as in Medieval, modern etc.). The database can then be filtered based on this data. This data is stored alongside the model in a Scriptable Object (`ModelMetaData`).\n\nWhen the application is run in the editor all prefabs found in the `OpenSourceModels` folder are discovered and their meta-data files are loaded. If this file is missing a default one is created and saved. These files should then be edited to ensure the prefab is correctly categorized in the system.\n\nYou can create meta data objects for any assets you import using the `Create -> 3DTBD -> Model Meta Data`\n\nAt the time of writing these files need to be edited in the Unity Editor. \n\nCategories and time periods can be created using the `Create -> 3DTBD -> Category` or `Create -> 3DTBD -> Time Period` menu items. They should be created in the `OpenSourceModels/Resources/Categories` and `OpenSourceModels/Resources/Time Periods` folders.","_showSubtasks":false,"_tasksIds":[],"_hideCompletedChecklistItems":false,"_showTags":true,"_tagIds":["8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-53ebb3fa-72e3-4976-9184-28ae08ea818e"],"_showAssets":true,"_assets":[{"fileID":11500000,"guid":"134e62b5e3f926e47b3cb9589459bdfe","type":3},{"fileID":11500000,"guid":"a6fd238ceb5d7f54cb6f4a5b3360ea38","type":3}],"_showColors":true,"_colorIds":[],"_screenshot":[],"_showScreenshots":false,"_createdTicks":637040937954874933,"_updatedTicks":637041771437726090,"_scrollPosition":{"x":0.0,"y":0.0},"_boardWindow_SearchShow":true,"_taskWindow_ShowSubtask":false,"_treeWindow_SearchShow":true,"treeWindowShowSubtasksAnimation":{"m_Target":false,"speed":2.0,"m_Value":0.0},"_treeWindow_ShowSubtasks":false},{"_id":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-a93e55b4-c519-4d14-b514-1d868afa059d","_parentID":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-f3f993d6-11f0-4e7b-874f-7d8d36847a38","_lock":false,"_done":false,"_isParentSubtask":false,"_name":"Create a scripts 3dtbd project","_description":"The scripts project should include:\n\nhttps://medium.com/developers-writing/how-about-having-nice-arrays-and-lists-in-unity3d-by-default-e4fba13d1b50","_showSubtasks":false,"_tasksIds":[],"_hideCompletedChecklistItems":false,"_showTags":true,"_tagIds":[],"_showAssets":true,"_assets":[],"_showColors":true,"_colorIds":[],"_screenshot":[],"_showScreenshots":false,"_createdTicks":637041473803413879,"_updatedTicks":637041788937041320,"_scrollPosition":{"x":0.0,"y":0.0},"_boardWindow_SearchShow":true,"_taskWindow_ShowSubtask":false,"_treeWindow_SearchShow":true,"treeWindowShowSubtasksAnimation":{"m_Target":false,"speed":2.0,"m_Value":0.0},"_treeWindow_ShowSubtasks":false},{"_id":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-839de884-55a9-439c-b5ee-a5c8f1dc8d94","_parentID":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-9986b0c5-a3fb-447c-b0ca-bd760fa182f7","_lock":false,"_done":false,"_isParentSubtask":false,"_name":"Allow categories and time periods to be defined by scriptable objects","_description":"Right now in order to add a category or time period it is necessary to add them to an enum in `ModelMetaData`. It would be better if these were dynamically configured from ScriptableObjects defined in the project.\n","_showSubtasks":true,"_tasksIds":["8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-b15c068a-5629-4278-ad31-252b785d3792"],"_hideCompletedChecklistItems":false,"_showTags":true,"_tagIds":[],"_showAssets":true,"_assets":[{"fileID":11500000,"guid":"a6fd238ceb5d7f54cb6f4a5b3360ea38","type":3},{"fileID":11500000,"guid":"134e62b5e3f926e47b3cb9589459bdfe","type":3}],"_showColors":true,"_colorIds":[],"_screenshot":[],"_showScreenshots":false,"_createdTicks":637041721946676622,"_updatedTicks":637041767779622775,"_scrollPosition":{"x":0.0,"y":0.0},"_boardWindow_SearchShow":true,"_taskWindow_ShowSubtask":false,"_treeWindow_SearchShow":true,"treeWindowShowSubtasksAnimation":{"m_Target":false,"speed":2.0,"m_Value":0.0},"_treeWindow_ShowSubtasks":false},{"_id":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-b15c068a-5629-4278-ad31-252b785d3792","_parentID":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-839de884-55a9-439c-b5ee-a5c8f1dc8d94","_lock":false,"_done":true,"_isParentSubtask":true,"_name":"Discover category Scriptable Objects at runtime","_description":"At present the database requires that categories be defined in the component. We should instead look them up at runtime using something like:\n\ncategories = Resources.LoadAll<Category>(\"Configuration\");","_showSubtasks":false,"_tasksIds":[],"_hideCompletedChecklistItems":false,"_showTags":true,"_tagIds":[],"_showAssets":true,"_assets":[{"fileID":11500000,"guid":"a6fd238ceb5d7f54cb6f4a5b3360ea38","type":3}],"_showColors":false,"_colorIds":[],"_screenshot":[],"_showScreenshots":false,"_createdTicks":637041736678865205,"_updatedTicks":637041738500707301,"_scrollPosition":{"x":0.0,"y":0.0},"_boardWindow_SearchShow":true,"_taskWindow_ShowSubtask":true,"_treeWindow_SearchShow":true,"treeWindowShowSubtasksAnimation":{"m_Target":false,"speed":2.0,"m_Value":0.0},"_treeWindow_ShowSubtasks":false},{"_id":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-a104c5dd-76d5-4f1b-a988-cd5378fa1f1d","_parentID":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-f3f993d6-11f0-4e7b-874f-7d8d36847a38","_lock":false,"_done":false,"_isParentSubtask":false,"_name":"Allow models to be in multiple categories and time periods","_description":"At present each model must be in a single category or time period, however, many models can be applied to multiple categories or time periods.","_showSubtasks":false,"_tasksIds":[],"_hideCompletedChecklistItems":false,"_showTags":true,"_tagIds":[],"_showAssets":true,"_assets":[],"_showColors":false,"_colorIds":[],"_screenshot":[],"_showScreenshots":false,"_createdTicks":637041751732913835,"_updatedTicks":637041752451078867,"_scrollPosition":{"x":0.0,"y":0.0},"_boardWindow_SearchShow":true,"_taskWindow_ShowSubtask":false,"_treeWindow_SearchShow":true,"treeWindowShowSubtasksAnimation":{"m_Target":false,"speed":2.0,"m_Value":0.0},"_treeWindow_ShowSubtasks":false},{"_id":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-968487d0-8ace-44c5-a87f-0edad49b2b48","_parentID":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-7a052b00-6f1d-4b66-a1ef-8b968d95a46a","_lock":false,"_done":false,"_isParentSubtask":false,"_name":"Document the release process","_description":"At present the release process is not documented inside the Models project","_showSubtasks":false,"_tasksIds":[],"_hideCompletedChecklistItems":false,"_showTags":true,"_tagIds":[],"_showAssets":true,"_assets":[],"_showColors":false,"_colorIds":[],"_screenshot":[],"_showScreenshots":false,"_createdTicks":637041788981942738,"_updatedTicks":637041797224135212,"_scrollPosition":{"x":0.0,"y":0.0},"_boardWindow_SearchShow":true,"_taskWindow_ShowSubtask":false,"_treeWindow_SearchShow":true,"treeWindowShowSubtasksAnimation":{"m_Target":false,"speed":2.0,"m_Value":0.0},"_treeWindow_ShowSubtasks":false},{"_id":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-be948df0-04f2-4928-8b2b-86ce91ed9d83","_parentID":"8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-9986b0c5-a3fb-447c-b0ca-bd760fa182f7","_lock":false,"_done":false,"_isParentSubtask":false,"_name":"Create an in-editor browser of the prefabs","_description":"Currently the prefab browser is only available if you enter play mode. This is very limiting if you want to use the UI to discover a suitable asset for use in your scene. We need an in-editor viewer for our assets.","_showSubtasks":false,"_tasksIds":[],"_hideCompletedChecklistItems":false,"_showTags":true,"_tagIds":[],"_showAssets":true,"_assets":[{"fileID":11500000,"guid":"aac3e69d7d2f0e242b31575c63e4bdac","type":3}],"_showColors":false,"_colorIds":[],"_screenshot":[],"_showScreenshots":false,"_createdTicks":637041797304339149,"_updatedTicks":637041800186242067,"_scrollPosition":{"x":0.0,"y":95.0},"_boardWindow_SearchShow":true,"_taskWindow_ShowSubtask":false,"_treeWindow_SearchShow":true,"treeWindowShowSubtasksAnimation":{"m_Target":false,"speed":2.0,"m_Value":0.0},"_treeWindow_ShowSubtasks":false}]}}
03{"MonoBehaviour":{"m_Enabled":true,"m_EditorHideFlags":0,"m_Name":"Tags","m_EditorClassIdentifier":"","_keys":["8bb0ee0e438bc749e9ba53a9ddab67d53ef83f70-53ebb3fa-72e3-4976-9184-28ae08ea818e"],"_values":["Documentation"]}}
04{"MonoBehaviour":{"m_Enabled":true,"m_EditorHideFlags":0,"m_Name":"Colors","m_EditorClassIdentifier":"","_keys":[],"_values":[]}}
05{"MonoBehaviour":{"m_Enabled":true,"m_EditorHideFlags":0,"m_Name":"Screenshots","m_EditorClassIdentifier":"","_all":[]}}